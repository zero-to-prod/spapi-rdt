name: release

on:
  workflow_run:
    workflows: ["backwards_compatibility"]
    types:
      - completed

permissions:
  contents: write

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set safe directory
        run: git config --global --add safe.directory /github/workspace

      - name: Get latest version
        id: get_version
        run: |
          LATEST_TAG=$(git tag --sort=-v:refname | head -n 1)
          echo "latest_version=$LATEST_TAG" >> $GITHUB_ENV

      - name: Determine next version
        id: version_bump
        run: |
          LATEST_VERSION=${{ env.latest_version }}
          if [ -z "$LATEST_VERSION" ]; then LATEST_VERSION="0.1.0"; fi
          
          MAJOR=$(echo $LATEST_VERSION | cut -d. -f1)
          MINOR=$(echo $LATEST_VERSION | cut -d. -f2)
          PATCH=$(echo $LATEST_VERSION | cut -d. -f3)

          if git log -1 --pretty=%B | grep -qE 'feat/'; then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            PATCH=$((PATCH + 1))
          fi

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Create Git tag
        run: |
          git tag -a v${{ env.new_version }} -m "Release v${{ env.new_version }}"
          git push origin v${{ env.new_version }}

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.new_version }}
          name: Release v${{ env.new_version }}
          body: |
            Changes in this release:
            - Auto-generated release
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}